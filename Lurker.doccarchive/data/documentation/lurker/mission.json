{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mission"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lurker uses Swift Concurrency and requires that any code you designate for"},{"type":"text","text":" "},{"type":"text","text":"background execution conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" (and is therefore thread-safe)."}]},{"anchor":"Implementing-Your-Mission","level":3,"type":"heading","text":"Implementing Your Mission"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Mission"},{"type":"text","text":" is an abstract representation of a specific, isolated task that can be run in the background. You must create your own objects which conform to the "},{"type":"codeVoice","code":"Mission"},{"type":"text","text":" protocol, then register and schedule them with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lurker\/documentation\/Lurker"},{"type":"text","text":" instance."}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Mission"},{"type":"text","text":" inherits from the "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" protocol, thus requiring any code written in your concrete object to be thread-safe. To ensure this, any objects conforming to "},{"type":"codeVoice","code":"Mission"},{"type":"text","text":" should either be "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" or "},{"type":"codeVoice","code":"final class"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to specifically opt-out of this behavior, use "},{"type":"codeVoice","code":"@unchecked"},{"type":"text","text":". While no documentation is currently available from Apple, you can learn more about "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.avanderlee.com\/swift\/sendable-protocol-closures\/"},{"type":"text","text":"."}]}]},{"anchor":"An-Example-Implementation","level":3,"type":"heading","text":"An Example Implementation"},{"type":"codeListing","syntax":"swift","code":["final class SuperSecretMission: Mission {","    ","    var style: MissionStyle {","        return .extended","    }","    ","    var identifier: String {","        \/\/ The string returned here MUST exactly match a predefined background task ID in","        \/\/ your app's Info.plist file.","    ","        return \"gov.agency.mission.topSecret\"","    }","    ","    func runTask(_ taskInfo: BGTask) async -> Bool {","        let secretTask = Task { () -> Report in","            return Agent.main.bigProject()","        }","        ","        taskInfo.expirationHandler { expiration in","            secretTask.cancel()","        }","        ","        let result = await secretTask.value","        if result == .success {","            await Bureau.shared.sendReport(result)","            taskInfo.setTaskCompleted(success: true)","        } else {","            taskInfo.setTaskCompleted(success: false)","        }","    }","    ","    func earliestStart() -> Date? {","        \/\/ You can always return nil for the default system behavior, or a custom delay.","        return Date(timeIntervalSinceNow: TimeInterval(10 * 60))","    }","    ","}","``"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/lurker\/mission"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Lurker\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"identifier":{"url":"doc:\/\/Lurker\/documentation\/Lurker\/Mission","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A specific, isolated task that can be run in the background."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mission"}],"title":"Mission","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:6Lurker7MissionP","modules":[{"name":"Lurker"}],"navigatorTitle":[{"kind":"identifier","text":"Mission"}]},"hierarchy":{"paths":[["doc:\/\/Lurker\/documentation\/Lurker"],["doc:\/\/Lurker\/documentation\/Lurker","doc:\/\/Lurker\/documentation\/Lurker\/DesigningMissions"],["doc:\/\/Lurker\/documentation\/Lurker","doc:\/\/Lurker\/documentation\/Lurker\/UsingLurker"],["doc:\/\/Lurker\/documentation\/Lurker","doc:\/\/Lurker\/documentation\/Lurker\/UsingLurker","doc:\/\/Lurker\/documentation\/Lurker\/DesigningMissions"]]},"references":{"doc://Lurker/documentation/Lurker/UsingLurker":{"role":"collectionGroup","title":"Using Lurker","abstract":[{"type":"text","text":"Lurker makes it easy to setup, schedule, and manage background tasks in your app. Learn how to get up and running with Lurker once you’ve configured your app for background tasks."}],"identifier":"doc:\/\/Lurker\/documentation\/Lurker\/UsingLurker","kind":"article","type":"topic","url":"\/documentation\/lurker\/usinglurker"},"doc://Lurker/documentation/Lurker/DesigningMissions":{"role":"collectionGroup","title":"Designing Missions","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Mission"},{"type":"text","text":" encapsulates a singular background task or piece of work to perform. The "},{"type":"codeVoice","code":"Mission"},{"type":"text","text":" protocol defines a few parameters that your subclass will need to provide and a function where work can be performed."}],"identifier":"doc:\/\/Lurker\/documentation\/Lurker\/DesigningMissions","kind":"article","type":"topic","url":"\/documentation\/lurker\/designingmissions"},"doc://Lurker/documentation/Lurker/Mission":{"role":"symbol","title":"Mission","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mission"}],"abstract":[{"type":"text","text":"A specific, isolated task that can be run in the background."}],"identifier":"doc:\/\/Lurker\/documentation\/Lurker\/Mission","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mission"}],"url":"\/documentation\/lurker\/mission"},"doc://Lurker/documentation/Lurker":{"role":"collection","title":"Lurker","abstract":[{"type":"text","text":"An abstraction over the system’s Background Task API."}],"identifier":"doc:\/\/Lurker\/documentation\/Lurker","kind":"symbol","type":"topic","url":"\/documentation\/lurker"},"https://www.avanderlee.com/swift/sendable-protocol-closures/":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/www.avanderlee.com\/swift\/sendable-protocol-closures\/","url":"https:\/\/www.avanderlee.com\/swift\/sendable-protocol-closures\/"},"doc://Lurker/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lurker\/s8SendableP"}}}